To get this running at bootup!

put environment variables is rc.local or $HOME/.profile


Used Crontab.  Tried crontab -e; sudo crontab -e.  Multiple failures.

This article is helpful: https://garyhall.org.uk/troubleshooting-cron-raspberry-pi.html


Finally, found article that suggested using cron to call shell script: 
https://stackoverflow.com/a/18647100/7386278

@reboot still wasn't working.  Added a delay per:
https://www.raspberrypi.org/forums/viewtopic.php?t=193438

Maybe going back and adding the delay directly to the crontab will work with forever.  (It was working with autoreboot and npm... but not python.)



////// rc.local
#!/bin/sh -e
#
# rc.local
#
# This script is executed at the end of each multiuser runlevel.
# Make sure that the script will "exit 0" on success or any other
# value on error.
#
# In order to enable or disable this script just change the execution
# bits.
#
# By default this script does nothing.

export SLACK_API_TOKEN="xoxb-554404107223-554415100087-cZv0gb0zJG2KfuPRt3V7d0SH"
export TWILIO_SID="ACc8f6d44518086b3e6c1b8ba64926145d"
export TWILIO_TOKEN=""
export YTEL_USER="41bc3198-e7aa-55d8-488f-1f8dbc11efc9"
export YTEL_PASS=""
export SMS_TO="+14084649963"
export YTEL_SMS_FROM="+14086802121"
export TWILIO_SMS_FROM="+14086693353"
export YTEL_CALLBACK='http://a15383152.mynetgear.com'
export GMAIL_USER="russ.goldin@gmail.com"
export GMAIL_PASSWORD=""

# Print the IP address
_IP=$(hostname -I) || true
if [ "$_IP" ]; then
  printf "My IP address is %s\n" "$_IP"
fi

#sleep 10;
chmod +x /home/pi/poolcontroller-manager/autorebootnonetwork.sh
# sleep 1;
chmod +x /home/pi/poolcontroller-manager/forever
# sleep 1;
# chown pi:pi /home/pi/poolcontroller-manager/poolcontroller-manager.log
# sleep 1;
# chmod 755 /home/pi/poolcontroller-manager/poolcontroller-manager.log
# sleep 1;
# sh -e -c '/home/pi/poolcontroller-manager/forever /home/pi/poolcontroller-manager/poolcontroller-manager.py & > /home/pi/Documents/BootUpLogPCM.txt 2>&1'
# sh -e -c '/home/pi/poolcontroller-manager/forever /home/pi/poolcontroller-manager/poolcontroller-manager.py &'

# sleep 15;
# sh -e -c '/home/pi/poolcontroller-manager/npm start & > /home/pi/Documents/BootUpLogNPM.txt 2>&1'
# sh -e -c '/home/pi/poolcontroller-manager/npm start &'

exit 0

//////// crontab -e7
BASH_ENV=/home/pi/.profile
#@reboot sleep 30 && /usr/local/bin/npm start --prefix ./poolcontroller-manager > /home/pi/poolcontroller-manager/poolcontrollerWebCRON.log 2>&1
@reboot sleep 45 && /home/pi/poolcontroller-manager/launch.sh &
# @reboot sleep 60 && /home/pi/poolcontroller-manager/autorebootnonetwork.sh &

//////// $HOME/.profile
# ~/.profile: executed by the command interpreter for login shells.
# This file is not read by bash(1), if ~/.bash_profile or ~/.bash_login
# exists.
# see /usr/share/doc/bash/examples/startup-files for examples.
# the files are located in the bash-doc package.

# the default umask is set in /etc/profile; for setting the umask
# for ssh logins, install and configure the libpam-umask package.
#umask 022

# if running bash
if [ -n "$BASH_VERSION" ]; then
    # include .bashrc if it exists
    if [ -f "$HOME/.bashrc" ]; then
        . "$HOME/.bashrc"
    fi
fi

# set PATH so it includes user's private bin if it exists
if [ -d "$HOME/bin" ] ; then
    PATH="$HOME/bin:$PATH"
fi

export SLACK_API_TOKEN="xoxb-554404107223-554415100087-cZv0gb0zJG2KfuPRt3V7d0SH"
export TWILIO_SID="ACc8f6d44518086b3e6c1b8ba64926145d"
export TWILIO_TOKEN=""
export YTEL_USER="41bc3198-e7aa-55d8-488f-1f8dbc11efc9"
export YTEL_PASS=""
export SMS_TO="+14084649963"
export YTEL_SMS_FROM="+14086802121"
export TWILIO_SMS_FROM="+14086693353"
export YTEL_CALLBACK='http://a15383152.mynetgear.com'
export GMAIL_USER="russ.goldin@gmail.com"
export GMAIL_PASSWORD=""
